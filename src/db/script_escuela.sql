-- Tabla para Países
CREATE TABLE "country" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Estados
CREATE TABLE "state" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "countryID" bigint,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Municipios
CREATE TABLE "municipality" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "stateID" bigint,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Parroquias
CREATE TABLE "parish" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "minicipalityID" bigint,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Roles del Personal
CREATE TABLE "rol" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50),
  "description" text,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Permisos del Sistema
CREATE TABLE "permisos" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nombre" varchar(50),
  "descripcion" text,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Personal del Colegio
CREATE TABLE "personal" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ci" varchar(20) UNIQUE,
  "name" varchar(100),
  "lastName" varchar(100),
  "idRole" bigint,
  "telephoneNumber" varchar(20),
  "email" varchar(100),
  "birthday" timestamp,
  "direction" varchar(30),
  "parish" bigint,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Estatus de Estudiantes
CREATE TABLE "status_student" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "descripcion" varchar(100),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Brigadas
CREATE TABLE "brigade" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para gestionar los diferentes periodos académicos (ej., 2023-2024, 2024-2025)
CREATE TABLE "academic_period" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE,
  "start_date" date,
  "end_date" date,
  "is_current" boolean DEFAULT FALSE, -- Flag para el período académico actual
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla que asigna profesores a brigadas por período
CREATE TABLE "brigadeTeacherDate" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "brigadeID" bigint,
  "personalID" bigint,
  "academicPeriodID" bigint, -- Relaciona la asignación a un período académico
  "dateI" date,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Representantes
CREATE TABLE "representative" (
  "ci" varchar(20) UNIQUE PRIMARY KEY,
  "name" varchar(100),
  "lastName" varchar(100),
  "telephoneNumber" varchar(20),
  "email" varchar(100),
  "maritalStat" varchar(20),
  "profesion" varchar(100),
  "birthday" timestamp,
  "telephoneHouse" varchar(20),
  "roomAdress" varchar(50),
  "workPlace" varchar(50),
  "jobNumber" varchar(20),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Estudiantes
CREATE TABLE "student" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ci" varchar(15),
  "name" varchar(100),
  "lastName" varchar(100),
  "sex" varchar(10),
  "birthday" date,
  "placeBirth" varchar(20),
  "parishID" bigint,
  "status_id" bigint,
  "quantityBrothers" int,
  "representativeID" varchar(20),
  "motherName" varchar(100),
  "motherCi" varchar(20),
  "motherTelephone" varchar(20),
  "fatherName" varchar(100),
  "fatherCi" varchar(20),
  "fatherTelephone" varchar(20),
  "livesMother" boolean,
  "livesFather" boolean,
  "livesBoth" boolean,
  "livesRepresentative" boolean,
  "rolRopresentative" varchar(50),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para registrar el historial académico de estudiantes de nuevo ingreso
CREATE TABLE "student_academic_history" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "studentID" bigint,
  "academicPeriodID" bigint,   -- Referencia a academic_period
  "gradeID" bigint,            -- Referencia a grade
  "institutionName" varchar(200),
  "gradeAchieved" char, -- Para almacenar notas como caracteres (A, B, C, etc.)
  "isApproved" boolean,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla intermedia para la relación muchos a muchos entre student y brigade por período
CREATE TABLE "studentBrigade" (
  "studentID" BIGINT,
  "brigadeID" BIGINT,
  "academicPeriodID" BIGINT,   --  Para vincular la participación a un período específico
  "assignmentDate" date,
  "created_at" timestamp,
  "updated_at" timestamp,
  PRIMARY KEY ("studentID", "brigadeID", "academicPeriodID") -- Clave primaria compuesta
);

-- Tabla para Grados (Niveles Académicos)
CREATE TABLE "grade" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50),
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Secciones
CREATE TABLE "section" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "teacherCI" bigint,
  "gradeID" bigint,
  "academicPeriodID" bigint, --  Relaciona la sección a un período académico
  "seccion" varchar(2),      -- Nombre de la sección (ej., 'A', 'B')
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Matrículas (Inscripciones)
CREATE TABLE "enrollment" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "studentID" bigint,
  "sectionID" bigint, -- sectionID ya implica el academicPeriodID
  "brigadeTeacherDateID" bigint,
  "registrationDate" date,
  "repeater" boolean,
  "chemiseSize" varchar(10),
  "pantsSize" varchar(10),
  "shoesSize" varchar(10),
  "weight" float,
  "stature" float,
  "diseases" varchar(100),
  "observation" varchar(100),
  "birthCertificateCheck" boolean,
  "vaccinationCardCheck" boolean,
  "studentPhotosCheck" boolean,
  "representativePhotosCheck" boolean,
  "representativeCopyIDCheck" boolean,
  "representativeRIFCheck" boolean,
  "autorizedCopyIDCheck" boolean,
  "final_grade" char, -- Nota final del estudiante
  "final_grade_observation" varchar(100), -- Observación de la nota final
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Notas
CREATE TABLE "notes" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "enrollmentID" bigint,
  "notes" varchar(5),        -- Para almacenar notas como caracteres (A, B, C, etc.)
  "period" varchar(20),      -- Período de evaluación dentro del año académico (ej., "1er Lapso")
  "subject" varchar(25),
  "registrationDate" date,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla para Usuarios del Sistema
CREATE TABLE "usuario" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar(50) UNIQUE,
  "email" varchar(100),
  "password" varchar(255),
  "permiso_id" bigint,
  "access_token" varchar(500),
  "refresh_token" varchar(500),
  "token_expiry" timestamp,
  "email_verification_token" varchar(255),
  "email_verified" boolean,
  "password_reset_token" varchar(255),
  "password_reset_expires" timestamp,
  "security_word" text,
  "respuesta_de_seguridad" text,
  "last_login" timestamp,
  "is_active" boolean,
  "created_at" timestamp,
  "updated_at" timestamp,
  "personal_id" bigint
);

-- Tabla para Asistencia
CREATE TABLE "attendance" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "date_a" date,
  "sectionID" bigint,
  "observaciones" text,
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Tabla de Detalles de Asistencia
CREATE TABLE "attendanceDetails" (
  "attendanceID" bigint,
  "studentID" bigint,
  "assistant" boolean
);

-- Definición de Claves Foráneas

ALTER TABLE "state" ADD FOREIGN KEY ("countryID") REFERENCES "country" ("id");

ALTER TABLE "municipality" ADD FOREIGN KEY ("stateID") REFERENCES "state" ("id");

ALTER TABLE "parish" ADD FOREIGN KEY ("minicipalityID") REFERENCES "municipality" ("id");

ALTER TABLE "personal" ADD FOREIGN KEY ("idRole") REFERENCES "rol" ("id");

ALTER TABLE "personal" ADD FOREIGN KEY ("parish") REFERENCES "parish" ("id");

ALTER TABLE "brigadeTeacherDate" ADD FOREIGN KEY ("brigadeID") REFERENCES "brigade" ("id");
ALTER TABLE "brigadeTeacherDate" ADD FOREIGN KEY ("personalID") REFERENCES "personal" ("id");
ALTER TABLE "brigadeTeacherDate" ADD FOREIGN KEY ("academicPeriodID") REFERENCES "academic_period" ("id"); -- NUEVA FK

ALTER TABLE "student" ADD FOREIGN KEY ("parishID") REFERENCES "parish" ("id");
ALTER TABLE "student" ADD FOREIGN KEY ("status_id") REFERENCES "status_student" ("id");
ALTER TABLE "student" ADD FOREIGN KEY ("representativeID") REFERENCES "representative" ("ci");

ALTER TABLE "student_academic_history" ADD FOREIGN KEY ("studentID") REFERENCES "student" ("id");
ALTER TABLE "student_academic_history" ADD FOREIGN KEY ("academicPeriodID") REFERENCES "academic_period" ("id"); -- NUEVA FK
ALTER TABLE "student_academic_history" ADD FOREIGN KEY ("gradeID") REFERENCES "grade" ("id"); -- NUEVA FK

ALTER TABLE "studentBrigade" ADD FOREIGN KEY ("studentID") REFERENCES "student" ("id");
ALTER TABLE "studentBrigade" ADD FOREIGN KEY ("brigadeID") REFERENCES "brigade" ("id");
ALTER TABLE "studentBrigade" ADD FOREIGN KEY ("academicPeriodID") REFERENCES "academic_period" ("id"); -- NUEVA FK

ALTER TABLE "section" ADD FOREIGN KEY ("teacherCI") REFERENCES "personal" ("id");
ALTER TABLE "section" ADD FOREIGN KEY ("gradeID") REFERENCES "grade" ("id");
ALTER TABLE "section" ADD FOREIGN KEY ("academicPeriodID") REFERENCES "academic_period" ("id"); -- NUEVA FK

ALTER TABLE "enrollment" ADD FOREIGN KEY ("studentID") REFERENCES "student" ("id");
ALTER TABLE "enrollment" ADD FOREIGN KEY ("sectionID") REFERENCES "section" ("id");
ALTER TABLE "enrollment" ADD FOREIGN KEY ("brigadeTeacherDateID") REFERENCES "brigadeTeacherDate" ("id");

ALTER TABLE "notes" ADD FOREIGN KEY ("enrollmentID") REFERENCES "enrollment" ("id");

ALTER TABLE "usuario" ADD FOREIGN KEY ("permiso_id") REFERENCES "permisos" ("id");
ALTER TABLE "usuario" ADD FOREIGN KEY ("personal_id") REFERENCES "personal" ("id");

ALTER TABLE "attendance" ADD FOREIGN KEY ("sectionID") REFERENCES "section" ("id");

ALTER TABLE "attendanceDetails" ADD FOREIGN KEY ("attendanceID") REFERENCES "attendance" ("id");
ALTER TABLE "attendanceDetails" ADD FOREIGN KEY ("studentID") REFERENCES "student" ("id");